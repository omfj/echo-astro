---
import {
  isUserRegistered,
  register,
  unregister,
} from "../data/db/registrations";
import { getSpotRanges } from "../data/sanity/spot-ranges";

const { user } = Astro.locals;
const { id: happeningId } = Astro.params;

if (!happeningId) {
  throw new Error("Missing id");
}

if (Astro.request.method === "POST") {
  if (!user) {
    return;
  }

  const formData = await Astro.request.formData();
  const action = formData.get("action");

  if (action === "register") {
    await register(happeningId, user.id);
  } else {
    await unregister(happeningId, user.id);
  }
}

const spotRanges = await getSpotRanges(happeningId);
const hasSpotRanges = spotRanges && spotRanges.maxSpots > 0;
const isRegistered = user && (await isUserRegistered(happeningId, user.id));
---

{
  user && isRegistered && (
    <form method="post">
      <button name="action" value="unregister">
        Meld av
      </button>
    </form>
  )
}

{
  hasSpotRanges && user && !isRegistered && (
    <form method="post">
      <button name="action" value="register">
        Meld på
      </button>
    </form>
  )
}

{
  !user && hasSpotRanges && (
    <p>Du må være logget inn for å melde deg på arrangementet</p>
  )
}
